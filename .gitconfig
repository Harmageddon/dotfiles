[push]
  default = matching

[alias]
  c      = checkout
  undo   = reset --soft HEAD^
  rs     = reset --hard
  s      = status
  cm     = commit -m
  cm     = "!f() { git commit -m \"$1\"  || bash -ic '\"$DOTFILES_LOCATION/git-email-prompt.sh\"'; }; f"
  cam    = "!f() { git commit -am \"$1\" || bash -ic '\"$DOTFILES_LOCATION/git-email-prompt.sh\"'; }; f"
  a      = add -u
  aa     = add -A
  l      = log --decorate=short --graph --date=local --pretty=format:'%Cgreen{%h}%Cblue %<|(40)%an %Cred %ad %C(auto) %d %n    %s'
  ll     = log --decorate=short --graph --date=local --pretty=format:'%Cgreen{%h}%Cblue %<|(40)%an %Cred %ad %C(auto) %d %n    %s%n%w(90,4,4)%-b'
  lm     = log --decorate=short --graph --date=local --pretty=format:'%Cgreen{%h}%Cblue %<|(40)%an %Cred %ad %C(auto) %d %n          %Cblue%ae %n    %s'
  lb     = log --decorate=short --graph --date=local --pretty=format:'%Cgreen{%h}%Cblue %<|(40)%an %Cred %ad %C(auto) %d %n    %s' --branches
  last   = diff HEAD^1
  dh     = diff HEAD
  dcsv   = diff --word-diff-regex="[^[:space:],]+"
  test = !echo $@ && echo 1 || echo 2

  # Credits for pr and pr-clean to Corey Frang (gnarf)
  # https://gist.github.com/gnarf/5406589
  pr  = "!f() { git fetch -fu ${2:-upstream} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
  pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"

[core]
  editor = vim
  pager  = less -+S
